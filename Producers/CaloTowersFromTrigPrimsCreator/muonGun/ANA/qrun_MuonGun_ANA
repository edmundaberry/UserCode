#!/bin/bash

source /uscmst1/prod/sw/cms/shrc uaf

## Set release base and version
MY_RELEASE_BASE="/uscms/home/eberry/TowerAlgo/"
CMSSW_VERSION="CMSSW_2_2_7"
TAG="IDEAL_V12"
TEST="false"
BLANK=""

# Information for getting at local data
DATA_FOLDER="/uscms/home/eberry/data/MuonGun/RAW-DIGI-RECO"

# File information variables
N_FILES=`ls ${DATA_FOLDER}/*.root | wc -w`
FILE_LIST=`echo "${DATA_FOLDER}/*.root"`
FILE_NUM=1

# Get list of local files with line breaks
for FILE in $FILE_LIST
do
    if [ $FILE_NUM == $N_FILES ]; then
	
	DATA_FILES="${DATA_FILES}
'file:///${FILE}'"
    
    elif [ $FILE_NUM == 1 ];  then 
	DATA_FILES="'file:///${FILE}',"
    
    else 
    
	DATA_FILES="${DATA_FILES}
'file:///${FILE}',"
    
    fi
    ((FILE_NUM = FILE_NUM + 1))   

done

## Set variables
job=$1
numevents=$2
if [ ${3} == ${BLANK} ]; then
    suffix=${3}
else
    suffix="_${3}"
fi

if [ $TEST == "true" ]; then
job=1
numevents=2
suffix="_TEST"
fi
 
## Set file names
tarFile="${MY_RELEASE_BASE}/${CMSSW_VERSION}/src/Release.tar"
cfgFile="MuonGun_job${job}_${numevents}events${suffix}_cfg.py"

if [ $TEST != "true" ]; then
## Go to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}

## Load the environment
source /uscmst1/prod/sw/cms/cshrc uaf

## Download, compile, and initialize CMSSW
scram p CMSSW ${CMSSW_VERSION}
cd ${CMSSW_VERSION}/src
fi

eval `scram runtime -sh`

if [ $TEST != "true" ]; then
## Untar the tar ball containing the analysis framework
tar -xvf ${tarFile}

## Remove the old .pyc files and recompile
find -name "*.pyc" -print | xargs rm
scram b
showtags

## Go back to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}
fi

## Figure out how many events to skip
step=1
jobMinusOne=0
((jobMinusOne = $job - $step))
set eventsToSkip = 0
((eventsToSkip = $numevents * $jobMinusOne))

## Tell the log file what you're going to do
echo I am going to analyze CaloTowers from a muon particle gun
echo I am using CMSSW version: ${CMSSW_VERSION}
echo I am making python cfg file: ${cfgFile}
echo I am going to analyze ${numevents} events
echo I am using the suffix ${3}
echo This is job ${job}, and I have to do ${numevents} events/job
echo    so I will skip ${eventsToSkip}

## Make the config file

cat > ${cfgFile}<<EOF

import FWCore.ParameterSet.Config as cms

process = cms.Process("ANA")
process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.load("Configuration.EventContent.EventContent_cff")

process.GlobalTag.globaltag = '${TAG}::All'

process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(${numevents}))

process.source = cms.Source("PoolSource",
                            fileNames = cms.untracked.vstring(
${DATA_FILES}
))

process.source.skipEvents = cms.untracked.uint32(${eventsToSkip})

## My CaloTower producer
process.load("Producers.CaloTowersFromTrigPrimsCreator.calotowersfromtrigprimscreator_unpacked_cfi")

## My CaloTower comparator 
process.load("Analyzers.CaloTowerComp.calotowercomp_cfi")
process.caloTowerComparator.defaultCaloTowerFileName = "CaloTowerCompOutput_DefaultTowers_MuonGun_${TAG}_job${job}_${numevents}events${suffix}.root"
process.caloTowerComparator.createdCaloTowerFileName = "CaloTowerCompOutput_CreatedTowers_MuonGun_${TAG}_job${job}_${numevents}events${suffix}.root"

process.PRODUCE = cms.Path( process.caloTowersFromTrigPrimsCreator )
process.ANALYZE = cms.Path( process.caloTowerComparator )

process.schedule = cms.Schedule()
process.schedule.append(process.PRODUCE)
process.schedule.append(process.ANALYZE)

EOF

## Run the .cfg file
cmsRun ${cfgFile}

## Remove the .cfg file and the CMSSW build
if [ $TEST != "true" ]; then
rm ${cfgFile} 
rm -rf ${CMSSW_VERSION}
fi

