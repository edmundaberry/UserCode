#!/bin/bash

## Set release base and version
MY_RELEASE_BASE="/uscms/home/eberry/TowerAlgo/"
CMSSW_VERSION="CMSSW_2_2_7"
TAG="IDEAL_V12"
TEST="false"
BLANK=""

# Information for getting at local data
DATA_FOLDER="/uscms/home/eberry/data/CentralPionGun/GEN-SIM-DIGI-RAW"

# File information variables
N_FILES=`ls ${DATA_FOLDER}/*100GeV*.root | wc -w`
FILE_LIST=`echo "${DATA_FOLDER}/*100GeV*.root"`
FILE_NUM=1

# Get list of local files with line breaks
for FILE in $FILE_LIST
do
    if [ $FILE_NUM == $N_FILES ]; then
	
	DATA_FILES="${DATA_FILES}
'file:///${FILE}'"
    
    elif [ $FILE_NUM == 1 ];  then 
	DATA_FILES="'file:///${FILE}',"
    
    else 
    
	DATA_FILES="${DATA_FILES}
'file:///${FILE}',"
    
    fi
    ((FILE_NUM = FILE_NUM + 1))   

done

## Set variables
job=$1
numevents=$2
if [ ${3} == ${BLANK} ]; then
    suffix=${3}
else
    suffix="_${3}"
fi

if [ $TEST == "true" ]; then
job=1
numevents=2
suffix="_TEST"
fi

## Set file names
tarFile="${MY_RELEASE_BASE}/${CMSSW_VERSION}/src/Release.tar"
cfgFile="PionGun_job${job}_${numevents}events${suffix}_cfg.py"

if [ $TEST != "true" ]; then
## Go to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}

## Load the environment
source /uscmst1/prod/sw/cms/shrc uaf

## Download, compile, and initialize CMSSW
scram p CMSSW ${CMSSW_VERSION}
cd ${CMSSW_VERSION}/src
fi

eval `scram runtime -sh`

if [ $TEST != "true" ]; then
## Untar the tar ball containing the analysis framework
tar -xvf ${tarFile}

## Remove the old .pyc files and recompile
find -name "*.pyc" -print | xargs rm
scram b
showtags

## Go back to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}
fi

## Figure out how many events to skip
step=1
jobMinusOne=0
((jobMinusOne = $job - $step))
set eventsToSkip = 0
((eventsToSkip = $numevents * $jobMinusOne))

## Tell the log file what you're going to do
echo I am going to perform MC steps DigiToRaw and RECO on a pion particle gun
echo I am using CMSSW version: ${CMSSW_VERSION}
echo I am making python cfg file: ${cfgFile}
echo I am going to analyze ${numevents} events
echo I am using the suffix ${3}
echo This is job ${job}, and I have to do ${numevents} events/job
echo    so I will skip ${eventsToSkip}

## Make the config file

cat > ${cfgFile}<<EOF

import FWCore.ParameterSet.Config as cms

process = cms.Process("RAW-DIGI-RECO")

process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.load("Configuration.EventContent.EventContent_cff")
process.load("Configuration.StandardSequences.RawToDigi_cff")
process.load("RecoJets.Configuration.CaloTowersES_cfi")
process.load("RecoJets.JetProducers.CaloTowerSchemeB_cfi")
process.load("RecoLocalCalo.Configuration.RecoLocalCalo_cff")

process.GlobalTag.globaltag = '${TAG}::All'

process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(${numevents}))

process.source = cms.Source("PoolSource",
                            fileNames = cms.untracked.vstring(
${DATA_FILES}
))

process.source.skipEvents = cms.untracked.uint32(${eventsToSkip})


process.out = cms.OutputModule("PoolOutputModule",                               
                                outputCommands = cms.untracked.vstring('keep *'),
				fileName = cms.untracked.string('CentralPionGun_${TAG}_RAW-DIGI-RECO_job${job}_${numevents}events${suffix}.root')
)



process.calolocalreco_noEcalPreshower = cms.Sequence(process.ecalLocalRecoSequence_nopreshower+process.hcalLocalRecoSequence)

process.RAW_DIGI = cms.Path(process.RawToDigi)
process.RECO     = cms.Path(process.calolocalreco_noEcalPreshower + process.towerMaker)
process.OUT      = cms.EndPath(process.out)

process.schedule = cms.Schedule()
process.schedule.append( process.RAW_DIGI )
process.schedule.append( process.RECO     )
process.schedule.append( process.OUT      )

EOF

## Run the .cfg file
cmsRun ${cfgFile}

## Remove the .cfg file and the CMSSW build
if [ $TEST != "true" ]; then
rm ${cfgFile} 
rm -rf ${CMSSW_VERSION}
fi

