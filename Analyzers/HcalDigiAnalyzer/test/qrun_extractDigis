#!/bin/tcsh

## Scans over digis in a given data set
## Can scan over either CRUZET data or reco-level MC
## 
## USAGE:
## One argument, which determines which source to use
## Use 0 to run over CRUZET data (only available on CMSLPC)
## Use 1 to run over reco-level MC (if available, default is for nuGun)

## Tell submission script where to go

source ${HOME}/.tcshrc
echo "CMSSW_BASE = ${CMSSW_BASE}"
cd ${CMSSW_BASE}/src/Analyzers/HcalDigiAnalyzer/test
cmsenv

## Where will you get your Global Run data?

set run = 50908
set cffFileName = "CRUZETDataSet_run${run}.cff"

## For getting info straight from Global Run data

if ($1 == 0) then 
	set source          = "Analyzers/HcalDigiAnalyzer/data/${cffFileName}"
	set suffix          = "TP_new"
	set schedule        = "{unpack,analyze}"
	set hcalDigiTag     = "hcalDigis"
	set hcalTrigPrimTag = "hcalDigis"
endif

## For getting info from simulation

if ($1 == 1) then
	set source          = "Analyzers/DijetAnalyzer/data/dataFiles_nuGun_CRUZET_test.cff"
	set suffix          = "PostSimAnalysis"
	set schedule        = "{analyze}"
	set hcalDigiTag     = "hcalUnsuppressedDigis"
	set hcalTrigPrimTag = "hcalTriggerPrimitiveDigis"
endif

cat > extractDigisAndAnalyze_run${run}.cfg<<EOF

process ExtractDigisAndAnalyze =  {  

	##-----------------------------------------------
	## Input number of events (2000 is typical)
	##-----------------------------------------------

	untracked PSet maxEvents = {untracked int32 input = 2000}

	##-----------------------------------------------
	## Input data files
	##-----------------------------------------------

        include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
        include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
	include "EventFilter/HcalRawToDigi/data/HcalRawToDigi.cfi"
	include "Configuration/StandardSequences/data/FakeConditions.cff"
	include "Analyzers/DijetAnalyzer/data/RecommendedHcalConditions.cff"
	
	##-----------------------------------------------
	## Source goes here.  You need an empty source
	## that'll get replaced in the datafile
	##-----------------------------------------------
	
	include "${source}"
	
	##-----------------------------------------------
	## Input proper LUT's
	##-----------------------------------------------
	
	include "SimCalorimetry/HcalSimProducers/data/hcalUnsuppressedDigis.cfi"
	include "SimCalorimetry/HcalTrigPrimProducers/data/hcaltpdigi.cff" 

	replace HcalTPGCoderULUT.read_Ascii_LUTs = true
	replace HcalTPGCoderULUT.inputLUTs = "Analyzers/HcalDigiAnalyzer/data/forCRUZET3/inputLUTcoder_CRUZET_part3_v2_noHO.dat"
	
	include "CalibCalorimetry/CaloTPG/data/CaloTPGTranscoder.cfi"
	replace CaloTPGTranscoder.hcalLUT1 = "Analyzers/HcalDigiAnalyzer/data/forCRUZET3/outputLUTtranscoder_CRUZET_part3_v2.dat"
	replace CaloTPGTranscoder.hcalLUT2 = "Analyzers/HcalDigiAnalyzer/data/forCRUZET3/Decompression.dat"

	##-----------------------------------------------
	## Declare analyzer objects for each DataFrame type
	##-----------------------------------------------

	module hbDigiAnalyzer = HBHEDigiAnalyzer { 
		untracked InputTag hcalDigiTag = "${hcalDigiTag}"
		untracked InputTag hcalTrigPrimTag = "${hcalTrigPrimTag}"

		untracked string outPath    = "${HOME}/data/"
		untracked string outSuffix  = "_run${run}_${suffix}"		
		untracked string subdetName = "HB"

		untracked bool scanForSpikes = true
		untracked bool verbose = false
	}
	
	module heDigiAnalyzer = HBHEDigiAnalyzer {
		
		untracked InputTag hcalDigiTag = "${hcalDigiTag}"
		untracked InputTag hcalTrigPrimTag = "${hcalTrigPrimTag}"
		
		untracked string outPath    = "${HOME}/data/"
		untracked string outSuffix  = "_run${run}_${suffix}"
		untracked string subdetName = "HE"
		
		untracked bool scanForSpikes = false
		untracked bool verbose = false
	}
	
	module hoDigiAnalyzer = HODigiAnalyzer {
		untracked InputTag hcalDigiTag = "${hcalDigiTag}"
		untracked InputTag hcalTrigPrimTag = "${hcalTrigPrimTag}"

		untracked string outPath    = "${HOME}/data/"
		untracked string outSuffix  = "_run${run}_${suffix}"
		untracked string subdetName = "HO"

		untracked bool scanForSpikes = false
		untracked bool verbose = false
	}
	
	module hfDigiAnalyzer = HFDigiAnalyzer {
		untracked InputTag hcalDigiTag = "${hcalDigiTag}"
		untracked InputTag hcalTrigPrimTag = "${hcalTrigPrimTag}"

		untracked string outPath    = "${HOME}/data/"
		untracked string outSuffix  = "_run${run}_${suffix}"
		untracked string subdetName = "HF"

		untracked bool scanForSpikes = true
		untracked bool verbose = false
	}

	path unpack  = {hcalDigis}
	path analyze = {hbDigiAnalyzer,
			heDigiAnalyzer,
		        hoDigiAnalyzer,
			hfDigiAnalyzer }
			
	schedule = ${schedule}

}
EOF

cmsRun extractDigisAndAnalyze_run${run}.cfg
