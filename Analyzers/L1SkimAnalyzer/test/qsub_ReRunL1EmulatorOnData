#!/bin/tcsh

set work_dir = $PWD
set begin = 0
set end = 0
set numevents = 0

if ($#argv == 3) then
    echo 'Setting working directory to' $PWD
    set begin = $1
    set end = $2
    set numevents = $3
else if( $#argv == 4 ) then
    if ( -d $1 ) then
	set work_dir = $1
	set begin = $2
	set end = $3
	set numevents = $4
    else
	echo "Error! $1 is not a directory, exiting!"
	exit 1
    endif

else 
    echo "Usage: $0 <work_dir> <low_threshold> <high_threshold> <numevents> OR"
    echo "If desired work directory is the current one, omit directory argument."
    echo "The script assumes there is a sub-directory called log/ in the designated work dir."
    exit 1
endif

cd $work_dir

if (! -e qrun_ReRunL1EmulatorOnData ) then
    echo "Warning! Could not find executable qrun_ReRunL1EmulatorOnData, script will exit"
    exit 1
endif
if (! -e log ) then
    echo "Warning! Could not find log directory - please create."
    exit 1
endif

echo "Notifications will be sent to $user@fnal.gov"

set threshold = $begin


echo Begin is $begin, threshold is $threshold, end is $end
while ($threshold <= $end)

echo Entering loop: Threshold is $threshold

cat > reRunL1EmulatorOnData_${threshold}_condor<<EOF
universe = vanilla
Executable = ${CMSSW_BASE}/src/Analyzers/L1SkimAnalyzer/test/qrun_ReRunL1EmulatorOnData
Requirements = Memory >= 199 &&OpSys == "LINUX" && (Arch != "DUMMY" )
ShouldTransferFiles = YES
WhenToTransferOutput = ON_EXIT
Output = ${CMSSW_BASE}/src/Analyzers/L1SkimAnalyzer/test/log/reRunL1EmulatorOnData_threshold${threshold}_\$(Cluster)_\$(Process).stdout
Error = ${CMSSW_BASE}/src/Analyzers/L1SkimAnalyzer/test/log/reRunL1EmulatorOnData_threshold${threshold}_\$(Cluster)_\$(Process).stderr
Log = ${CMSSW_BASE}/src/Analyzers/L1SkimAnalyzer/test/log/reRunL1EmulatorOnData_threshold${threshold}_\$(Cluster)_\$(Process).log
notify_user = ${user}@FNAL.GOV
Arguments = $work_dir $threshold $numevents
Queue 1
EOF

condor_submit reRunL1EmulatorOnData_${threshold}_condor
@ threshold = ($threshold + 1)

echo Job submitted. Threshold is $threshold, end is $end 

end

echo This is the end
