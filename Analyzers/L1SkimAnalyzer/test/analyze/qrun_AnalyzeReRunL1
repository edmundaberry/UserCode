#!/bin/tcsh

## Set release base and version
set MY_RELEASE_BASE = /uscms/home/eberry
set CMSSW_VERSION = CMSSW_2_2_3

## Set variables
set job = $1
set numevents = $2
set threshold = $3
set ptBin = $4
set suffix = $5

## Set file names
set tarFile = ${MY_RELEASE_BASE}/${CMSSW_VERSION}/src/Analyzers.tar
set cfgFile = ReRunL1EmulatorOnData_ptBin${ptBin}_threshold${threshold}GeV_job${job}_${numevents}events_${suffix}_cfg.py

## Figure out how many events to skip
set step = 1
set jobMinusOne = 0
@ jobMinusOne = $job - $step
set eventsToSkip = 0
@ eventsToSkip = $numevents * $jobMinusOne

## Go to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}

## Load the environment
source /uscmst1/prod/sw/cms/cshrc uaf

## Download, compile, and initialize CMSSW
scram p CMSSW ${CMSSW_VERSION}
cd ${CMSSW_VERSION}/src
eval `scram runtime -csh`

## Untar the tar ball containing the analysis framework
tar -xvf ${tarFile}

## Remove the old .pyc files and recompile
find -name "*.pyc" -print | xargs rm
scram b

## Go back to the scratch directory
cd ${_CONDOR_SCRATCH_DIR}

## Tell the log file what you're going to do
echo I am going to re-run the L1 Emulator on these QCD dijets
echo I am using CMSSW version: ${CMSSW_VERSION}
echo I am making python cfg file: ${cfgFile}
echo I am going to analyze ${numevents} events
echo I am looking at PtBin number ${ptBin}
echo I am using the suffix ${suffix}
echo This is job ${job}, and I have to do ${numevents} events/job
echo    so I will skip ${eventsToSkip}

## Make the config file

cat > ${cfgFile}<<EOF

import FWCore.ParameterSet.Config as cms

process = cms.Process("AnalyzeL1ReRun")
process.load("FWCore.MessageLogger.MessageLogger_cfi")

process.load("Configuration.StandardSequences.GeometryPilot2_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")


process.load("Analyzers.L1SkimAnalyzer.qcdDijets_ReRunWith223Emulator_PtBin${ptBin}_cff")
process.source.skipEvents = cms.untracked.uint32(${eventsToSkip})

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(${numevents})
)

##-------------------------------------------------------------------------------------
## Include geometry and global tag
##-------------------------------------------------------------------------------------

## Normal global tag stuff

process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_noesprefer_cff")
process.GlobalTag.globaltag = 'IDEAL_V9::All'

## Make sure that GlobalTag doesn't re-write your Jet calibration function
## Jet calibration function is where the HT jet threshold is set
## You need this to do L1 jet threshold studies

process.myPrefer = cms.ESPrefer("L1GctConfigProducers")
#process.SiPrefer = cms.ESPrefer("SiStripPedestalsFakeESSource")

##-------------------------------------------------------------------------------------
## Load my analyzer
##-------------------------------------------------------------------------------------

process.load('Analyzers.L1SkimAnalyzer.l1skimanalyzer_Data_cfi')
process.l1SkimAnalyzerData.outSuffix = "_L1EmulatorOnMC_PtBin${ptBin}_${threshold}GeV_job${job}_${numevents}events_${suffix}"
process.l1SkimAnalyzerData.outPath = cms.untracked.string("./")
process.analyze = cms.Path(process.l1SkimAnalyzerData)

##-------------------------------------------------------------------------------------
## Schedule everything
##-------------------------------------------------------------------------------------

process.schedule = cms.Schedule()
process.schedule.append(process.analyze)

EOF

## Run the .cfg file
cmsRun ${cfgFile}

## Remove the .cfg file and the CMSSW build
rm ${cfgFile} 
rm -rf ${CMSSW_VERSION}

