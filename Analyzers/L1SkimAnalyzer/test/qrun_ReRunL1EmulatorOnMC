#!/bin/tcsh

## Set variables
set work_dir = $1
set threshold = $2
set ptBin = $3
set job = $4
set numevents = $5
set suffix = $6

set step = 1
set jobMinusOne = 0
@ jobMinusOne = $job - $step

set eventsToSkip = 0
@ eventsToSkip = $numevents * $jobMinusOne

## Load CMSSW
cd /uscms/home/eberry/CMSSW_2_1_11/
source /uscmst1/prod/sw/cms/cshrc uaf
eval `scram runtime -csh`
cd $work_dir

## Tell the log file what you're going to do
echo I am going to analyze ${numevents} events
echo I am looking at PtBin number ${ptBin}
echo I am using the suffix ${suffix}
echo This is job ${job}, and I have to do ${numevents} events/job
echo    so I will skip ${eventsToSkip}

## Make the config file and run it

cat > ReRunL1EmulatorOnData_ptBin${ptBin}_threshold${threshold}GeV_job${job}_${numevents}events_${suffix}_cfg.py<<EOF

import FWCore.ParameterSet.Config as cms

process = cms.Process("L1ReRun")
process.load("FWCore.MessageLogger.MessageLogger_cfi")

process.load("Analyzers.L1SkimAnalyzer.qcdDijet${ptBin}_cff")
process.source.skipEvents = cms.untracked.uint32(${eventsToSkip})

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(${numevents})
)

# Include geometry and global tag
process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_noesprefer_cff")
process.GlobalTag.globaltag = 'IDEAL_V9::All'

##-------------------------------------------------------------------------------------

# Unpack raw data
process.load("Configuration.StandardSequences.RawToDigi_cff")

# Run trigger primitive generation on unpacked digis.  Then central L1
process.load("L1Trigger.Configuration.CaloTriggerPrimitives_cff")
process.load("L1Trigger.Configuration.SimL1Emulator_cff")
process.simEcalTriggerPrimitiveDigis.Label = 'ecalDigis'
process.simHcalTriggerPrimitiveDigis.inputLabel = 'hcalDigis'
process.simDtTriggerPrimitiveDigis.digiTag = 'muonDTDigis'
process.simCscTriggerPrimitiveDigis.CSCComparatorDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCComparatorDigi")
process.simCscTriggerPrimitiveDigis.CSCWireDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCWireDigi")
process.simRpcTriggerDigis.label = 'muonRPCDigis'

##-------------------------------------------------------------------------------------

process.load('L1Trigger.Configuration.L1StartupConfig_cff')

process.L1GctConfigProducers.L1CaloJetZeroSuppressionThresholdInGeV = cms.double(${threshold}.0)

process.myPrefer = cms.ESPrefer("L1GctConfigProducers")
process.SiPrefer = cms.ESPrefer("SiStripPedestalsFakeESSource")

# Do L1Extra with re-run digis
process.l1extraParticles = cms.EDProducer("L1ExtraParticlesProd",
    muonSource = cms.InputTag("simGmtDigis"),
    etTotalSource = cms.InputTag("simGctDigis"),
    nonIsolatedEmSource = cms.InputTag("simGctDigis","nonIsoEm"),
    etMissSource = cms.InputTag("simGctDigis"),
    produceMuonParticles = cms.bool(True),
    forwardJetSource = cms.InputTag("simGctDigis","forJets"),
    centralJetSource = cms.InputTag("simGctDigis","cenJets"),
    produceCaloParticles = cms.bool(True),
    tauJetSource = cms.InputTag("simGctDigis","tauJets"),
    isolatedEmSource = cms.InputTag("simGctDigis","isoEm"),
    etHadSource = cms.InputTag("simGctDigis"),
    centralBxOnly = cms.bool(True)
)

# Load my analyzer
process.load('Analyzers.L1SkimAnalyzer.l1skimanalyzer_Data_cfi')
process.l1SkimAnalyzerData.outSuffix = "_L1EmulatorOnMC_PtBin${ptBin}_${threshold}GeV_job${job}_${numevents}events_${suffix}"
process.l1SkimAnalyzerData.outPath = cms.untracked.string("${HOME}/data/")

process.out = cms.OutputModule("PoolOutputModule",
    fileName = cms.untracked.string('test.root'),
    outputCommands = cms.untracked.vstring('keep *')
)

process.finalProcess = cms.EndPath(process.out)

# Set up my path
process.p = cms.Path(
    process.ecalDigis
    *process.hcalDigis
    *process.muonDTDigis
    *process.muonCSCDigis
    *process.muonRPCDigis
    *process.CaloTriggerPrimitives
    *process.SimL1Emulator
    *process.l1extraParticles
    *process.l1SkimAnalyzerData
) 

EOF

cmsRun $work_dir/ReRunL1EmulatorOnData_ptBin${ptBin}_threshold${threshold}GeV_job${job}_${numevents}events_${suffix}_cfg.py


