#!/bin/tcsh

## Set variables
set work_dir = $1
set threshold = $2
set numevents = $3

## Load CMSSW
cd /uscms/home/eberry/CMSSW_2_1_11/
source /uscmst1/prod/sw/cms/cshrc uaf
eval `scram runtime -csh`
cd $work_dir

## Tell the log file what you're going to do
echo I am going to analyze $numevents events

## Make the config file and run it

cat > ReRunL1EmulatorOnData_${threshold}_cfg.py<<EOF

import FWCore.ParameterSet.Config as cms

process = cms.Process("L1ReRun")
process.load("FWCore.MessageLogger.MessageLogger_cfi")

process.source = cms.Source(
    "PoolSource",
    fileNames = cms.untracked.vstring(
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/006540F5-32A8-DD11-A0C1-000423D98EC4.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/007F2BE0-51A8-DD11-9B1D-000423D98750.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/00F5DCD0-43A8-DD11-B7FF-000423D98BE8.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0276CF62-55A8-DD11-9535-000423D98868.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0467F071-55A8-DD11-831D-000423D991D4.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/04699363-28A8-DD11-9C97-001D09F23174.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0855BCA1-3FA8-DD11-8408-0019B9F7310E.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/087E67AC-38A8-DD11-A4FC-000423D944FC.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/08B7E2A3-46A8-DD11-9885-000423D99BF2.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0A208F55-5AA8-DD11-A3F8-0030487A3C9A.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0AA3AC89-44A8-DD11-840C-0030487A3232.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0AAEA350-53A8-DD11-937D-000423D6B2D8.root',
    '/store/data/Commissioning08/Calo/RAW/v1/000/068/288/0C3C192F-56A8-DD11-A0BD-000423D9989E.root'
    )
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(${numevents})
)

# Include geometry and global tag
process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_noesprefer_cff")
process.GlobalTag.globaltag = 'CRAFT_V3P::All'

##-------------------------------------------------------------------------------------

# Unpack raw data
process.load("Configuration.StandardSequences.RawToDigi_Data_cff")

# Run trigger primitive generation on unpacked digis.  Then central L1
process.load("L1Trigger.Configuration.CaloTriggerPrimitives_cff")
process.load("L1Trigger.Configuration.SimL1Emulator_cff")
process.simEcalTriggerPrimitiveDigis.Label = 'ecalDigis'
process.simHcalTriggerPrimitiveDigis.inputLabel = 'hcalDigis'
process.simDtTriggerPrimitiveDigis.digiTag = 'muonDTDigis'
process.simCscTriggerPrimitiveDigis.CSCComparatorDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCComparatorDigi")
process.simCscTriggerPrimitiveDigis.CSCWireDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCWireDigi")
process.simRpcTriggerDigis.label = 'muonRPCDigis'

##-------------------------------------------------------------------------------------

process.L1GctConfigProducers.L1CaloJetZeroSuppressionThresholdInGeV = cms.double(${threshold}.0)

process.myPrefer = cms.ESPrefer("L1GctConfigProducers")
process.SiPrefer = cms.ESPrefer("SiStripPedestalsFakeESSource")

# Load my analyzer
process.load('Analyzers.L1SkimAnalyzer.l1skimanalyzer_Data_cfi')
process.l1SkimAnalyzerData.outSuffix = "_L1EmulatorOnData_${threshold}GeV_${numevents}events"

# Set up my path
process.p = cms.Path(
    process.ecalDigis
    *process.hcalDigis
    *process.muonDTDigis
    *process.muonCSCDigis
    *process.muonRPCDigis
    *process.CaloTriggerPrimitives
    *process.SimL1Emulator
    *process.l1SkimAnalyzerData
) 

EOF

cmsRun $work_dir/ReRunL1EmulatorOnData_${threshold}_cfg.py


